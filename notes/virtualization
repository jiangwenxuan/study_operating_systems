PROCESS:

mechanisms and policies

C's stack: local variables, function parameters, return addresses

C's heap: dynamically-allocated data

process states: running, ready, blocked

fork(), wait(), and exec()



MECHANISM: LIMITED DIRECT EXECUTION:

user mode and kernel mode

use trap instruction

use timer interrupt to help os maintain control of the machine

during a timer interrupt or system call, use context switch to change process


SCHEDULING: INTRODUCTION:

two scheduling metrics: turearound time, response time

five assumption:
1. each job runs for the same amount of time
2. all jobs arrive at the same time
3. once started, each job runs to completion
4. all jobs only use the cpu
5. the run-time of each job is known

First in, First out
Shortest Job First
Shortest Time-to-Completion First
Round Robin
Incorporating I/O

if there is no more oracle


SCHEDULING: THE MULTI-LEVEL FRRDBACK QUEUE:

rules:
1. if priority(a) > priority(b), a runs(b doesn't)
2. if priority(a) = priority(b), a & b run in round-robin fachion using the time slice of the given queue
3. while a job enters the system, it is placed at the highest priority(the topmost queue)
4. once a job uses up its time allotment at a given level(regardless of how many times it has given up the cpu, its prority is reduce
5. after some time period s, move all the jobs in the system to the topmost queue










